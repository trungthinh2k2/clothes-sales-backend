version: '3.8'

services:
  postgres-db:
    container_name: postgres-db
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: salesdb
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    networks:
      - sales-app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d salesdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-admin:
    container_name: postgres-admin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - sales-app-network
    restart: unless-stopped

  redis-container:
    container_name: redis-container
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    networks:
      - sales-app-network

  sales-app:
    container_name: sales-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - sales-app-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/salesdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456
      AWS_ACCESS_KEY_ID: ${ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${SECRET_KEY}
    depends_on:
      - postgres-db
      - redis-container
    restart: unless-stopped

networks:
  sales-app-network:
    driver: bridge

volumes:
  postgres:
  pgadmin:
