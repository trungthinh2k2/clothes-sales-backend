-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.addresses
(
    address_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    city character varying(255) COLLATE pg_catalog."default",
    district character varying(255) COLLATE pg_catalog."default",
    street character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT addresses_pkey PRIMARY KEY (address_id)
    );

CREATE TABLE IF NOT EXISTS public.orders
(
    delivery_amount double precision,
    discounted_amount double precision,
    discounted_price double precision,
    original_amount double precision,
    address_id bigint NOT NULL,
    created_at timestamp(6) without time zone,
    order_date timestamp(6) without time zone,
    updated_at timestamp(6) without time zone,
    user_id bigint NOT NULL,
    byer_name character varying(255) COLLATE pg_catalog."default",
    delivery_method character varying(255) COLLATE pg_catalog."default",
    note character varying(255) COLLATE pg_catalog."default",
    order_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    payment_method character varying(255) COLLATE pg_catalog."default",
    phone_number character varying(255) COLLATE pg_catalog."default",
    status character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT orders_pkey PRIMARY KEY (order_id),
    CONSTRAINT orders_address_id_key UNIQUE (address_id)
    );

CREATE TABLE IF NOT EXISTS public.users
(
    verify boolean NOT NULL,
    address_id bigint,
    created_at timestamp(6) without time zone,
    date_of_birth timestamp(6) without time zone,
    updated_at timestamp(6) without time zone,
    user_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    avatar_url character varying(255) COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default",
    facebook_account_id character varying(255) COLLATE pg_catalog."default",
    gender character varying(255) COLLATE pg_catalog."default",
    google_account_id character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    otp character varying(255) COLLATE pg_catalog."default",
    otp_reset_password character varying(255) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default",
    phone_number character varying(255) COLLATE pg_catalog."default",
    role character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (user_id),
    CONSTRAINT users_address_id_key UNIQUE (address_id),
    CONSTRAINT users_email_key UNIQUE (email)
    );

CREATE TABLE IF NOT EXISTS public.room_chat
(
    is_seen boolean,
    user_id bigint NOT NULL,
    room_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT room_chat_pkey PRIMARY KEY (room_id)
    );

CREATE TABLE IF NOT EXISTS public.messages
(
    send_date timestamp(6) without time zone,
    message_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    message_type character varying(255) COLLATE pg_catalog."default",
    receiver character varying(255) COLLATE pg_catalog."default" NOT NULL,
    room_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    sender character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT messages_pkey PRIMARY KEY (message_id)
    );

CREATE TABLE IF NOT EXISTS public.message_media
(
    media_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    media_type character varying(255) COLLATE pg_catalog."default",
    message_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    path character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT message_media_pkey PRIMARY KEY (media_id)
    );

CREATE TABLE IF NOT EXISTS public.comments
(
    rating integer,
    comment_date timestamp(6) without time zone,
    comment_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp(6) without time zone,
    product_id bigint NOT NULL,
    updated_at timestamp(6) without time zone,
    user_id bigint NOT NULL,
    text_content character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT comments_pkey PRIMARY KEY (comment_id)
    );

CREATE TABLE IF NOT EXISTS public.products
(
    avg_rating numeric(10, 1),
    buy_quantity integer,
    number_of_rating integer,
    price numeric(10, 2),
    total_quantity integer,
    category_id bigint NOT NULL,
    created_at timestamp(6) without time zone,
    product_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    provider_id bigint NOT NULL,
    updated_at timestamp(6) without time zone,
    description character varying(255) COLLATE pg_catalog."default",
    product_name character varying(255) COLLATE pg_catalog."default",
    product_status character varying(255) COLLATE pg_catalog."default",
    thumbnail character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT products_pkey PRIMARY KEY (product_id)
    );

CREATE TABLE IF NOT EXISTS public.categories
(
    category_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    category_name character varying(255) COLLATE pg_catalog."default",
    category_status character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT categories_pkey PRIMARY KEY (category_id)
    );

CREATE TABLE IF NOT EXISTS public.providers
(
    address_id bigint NOT NULL,
    provider_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    email character varying(255) COLLATE pg_catalog."default",
    phone_number character varying(255) COLLATE pg_catalog."default",
    provider_name character varying(255) COLLATE pg_catalog."default",
    provider_status character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT providers_pkey PRIMARY KEY (provider_id),
    CONSTRAINT providers_address_id_key UNIQUE (address_id)
    );

CREATE TABLE IF NOT EXISTS public.product_details
(
    quantity integer,
    color_id bigint NOT NULL,
    product_detail_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    product_id bigint NOT NULL,
    size_id bigint NOT NULL,
    CONSTRAINT product_details_pkey PRIMARY KEY (product_detail_id)
    );

CREATE TABLE IF NOT EXISTS public.colors
(
    color_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    color_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT colors_pkey PRIMARY KEY (color_id)
    );

CREATE TABLE IF NOT EXISTS public.sizes
(
    number_size integer,
    size_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    size_type character varying(255) COLLATE pg_catalog."default",
    text_size character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT sizes_pkey PRIMARY KEY (size_id)
    );

CREATE TABLE IF NOT EXISTS public.order_datails
(
    amount double precision,
    quantity integer,
    product_detail_id bigint NOT NULL,
    order_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT order_datails_pkey PRIMARY KEY (product_detail_id, order_id)
    );

CREATE TABLE IF NOT EXISTS public.product_images
(
    product_id bigint NOT NULL,
    product_image_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    path character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT product_images_pkey PRIMARY KEY (product_image_id)
    );

CREATE TABLE IF NOT EXISTS public.product_prices
(
    discount real,
    discounted_amount numeric(10, 2),
    discounted_price double precision,
    expired_date timestamp(6) without time zone,
    product_id bigint NOT NULL,
    product_price_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    note character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT product_prices_pkey PRIMARY KEY (product_price_id)
    );

CREATE TABLE IF NOT EXISTS public.comment_media
(
    comment_id bigint NOT NULL,
    media_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    media_type character varying(255) COLLATE pg_catalog."default",
    path character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT comment_media_pkey PRIMARY KEY (media_id)
    );

CREATE TABLE IF NOT EXISTS public.notification_read
(
    notification_id bigint NOT NULL,
    user_id bigint NOT NULL,
    CONSTRAINT notification_read_pkey PRIMARY KEY (notification_id, user_id)
    );

CREATE TABLE IF NOT EXISTS public.notifications
(
    notification_date timestamp(6) without time zone,
    notification_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    content character varying(255) COLLATE pg_catalog."default",
    scope character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT notifications_pkey PRIMARY KEY (notification_id)
    );

CREATE TABLE IF NOT EXISTS public.user_notifications
(
    notification_id bigint NOT NULL,
    user_id bigint NOT NULL,
    CONSTRAINT user_notifications_pkey PRIMARY KEY (notification_id, user_id)
    );

CREATE TABLE IF NOT EXISTS public.tokens
(
    expired_date timestamp(6) without time zone,
    token_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id bigint NOT NULL,
    access_token character varying(255) COLLATE pg_catalog."default",
    refresh_token character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT tokens_pkey PRIMARY KEY (token_id)
    );

CREATE TABLE IF NOT EXISTS public.user_voucher
(
    is_used boolean,
    user_id bigint NOT NULL,
    voucher_id bigint NOT NULL,
    CONSTRAINT user_voucher_pkey PRIMARY KEY (user_id, voucher_id)
    );

CREATE TABLE IF NOT EXISTS public.voucher
(
    discount double precision,
    max_price double precision,
    min_amount double precision,
    quantity integer,
    expried_date timestamp(6) without time zone,
    voucher_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    scope character varying(255) COLLATE pg_catalog."default",
    voucher_type character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT voucher_pkey PRIMARY KEY (voucher_id)
    );

CREATE TABLE IF NOT EXISTS public.order_voucher
(
    voucher_id bigint NOT NULL,
    order_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT order_voucher_pkey PRIMARY KEY (voucher_id, order_id)
    );

CREATE TABLE IF NOT EXISTS public.voucher_usages
(
    usages_date timestamp(6) without time zone,
    user_id bigint NOT NULL,
    voucher_id bigint NOT NULL,
    CONSTRAINT voucher_usages_pkey PRIMARY KEY (user_id, voucher_id)
    );

ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT fk32ql8ubntj5uh44ph9659tiih FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT fkhlglkvf5i60dv6dn397ethgpt FOREIGN KEY (address_id)
    REFERENCES public.addresses (address_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS orders_address_id_key
    ON public.orders(address_id);


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT fke8vydtk7hf0y16bfm558sywbb FOREIGN KEY (address_id)
    REFERENCES public.addresses (address_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS users_address_id_key
    ON public.users(address_id);


ALTER TABLE IF EXISTS public.room_chat
    ADD CONSTRAINT fkkjcs9j03jhexcrp7xv1a88mpb FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.messages
    ADD CONSTRAINT fk2st1837tmjdy0qx4vswxs1xjp FOREIGN KEY (room_id)
    REFERENCES public.room_chat (room_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.message_media
    ADD CONSTRAINT fk9dofr3ed1b29u3g5rkf4bgypi FOREIGN KEY (message_id)
    REFERENCES public.messages (message_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.comments
    ADD CONSTRAINT fk6uv0qku8gsu6x1r2jkrtqwjtn FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.comments
    ADD CONSTRAINT fk8omq0tc18jd43bu5tjh6jvraq FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT fkog2rp4qthbtt2lfyhfo32lsw9 FOREIGN KEY (category_id)
    REFERENCES public.categories (category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT fktltawi3myjt9pi09219eiou1o FOREIGN KEY (provider_id)
    REFERENCES public.providers (provider_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.providers
    ADD CONSTRAINT fkipcqyoewj5y5mkrbmdm8d9cf9 FOREIGN KEY (address_id)
    REFERENCES public.addresses (address_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS providers_address_id_key
    ON public.providers(address_id);


ALTER TABLE IF EXISTS public.product_details
    ADD CONSTRAINT fk5tcr8s5m0i3prlty9w0crocog FOREIGN KEY (color_id)
    REFERENCES public.colors (color_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_details
    ADD CONSTRAINT fkccs28awcbxp3s7mjthrwcdwvn FOREIGN KEY (size_id)
    REFERENCES public.sizes (size_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_details
    ADD CONSTRAINT fknfvvq3meg4ha3u1bju9k4is3r FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_datails
    ADD CONSTRAINT fkp01nx10f42gb5bplch31bwakb FOREIGN KEY (product_detail_id)
    REFERENCES public.product_details (product_detail_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_datails
    ADD CONSTRAINT fkplp84hx96mk49qnuugvh6sggo FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_images
    ADD CONSTRAINT fkqnq71xsohugpqwf3c9gxmsuy FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_prices
    ADD CONSTRAINT fko21ew0lemtpkoyly3vm1mq925 FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.comment_media
    ADD CONSTRAINT fkt8wo02jsyvj694xbvndwoknkp FOREIGN KEY (comment_id)
    REFERENCES public.comments (comment_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.notification_read
    ADD CONSTRAINT fkebhxa2jan0mu9air2lhwdl5qe FOREIGN KEY (notification_id)
    REFERENCES public.notifications (notification_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.notification_read
    ADD CONSTRAINT fkhggqhegtph0109s705vjpfqn FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_notifications
    ADD CONSTRAINT fk9f86wonnl11hos1cuf5fibutl FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_notifications
    ADD CONSTRAINT fkovvx0ab3h8s9lrm6fppuadn7d FOREIGN KEY (notification_id)
    REFERENCES public.notifications (notification_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tokens
    ADD CONSTRAINT fk2dylsfo39lgjyqml2tbe0b0ss FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_voucher
    ADD CONSTRAINT fk5llb4x2ixiwa75csgei7hbl5r FOREIGN KEY (voucher_id)
    REFERENCES public.voucher (voucher_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_voucher
    ADD CONSTRAINT fkqbre9r4sb85kdd0q1d9fa8c9m FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_voucher
    ADD CONSTRAINT fksrhuwor1f2tjthp6k4tmuwrqa FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_voucher
    ADD CONSTRAINT fksvm2d55bceb27bgd3t27co8ge FOREIGN KEY (voucher_id)
    REFERENCES public.voucher (voucher_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.voucher_usages
    ADD CONSTRAINT fk1xrihdxx7m2ko1txe5hjdpsom FOREIGN KEY (voucher_id)
    REFERENCES public.voucher (voucher_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.voucher_usages
    ADD CONSTRAINT fkayocv8v53p94c3jr2ookjd4jq FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION;

END;